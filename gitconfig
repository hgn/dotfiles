[user]
	name = Hagen Paul Pfeifer
	email = hagen@jauu.net
	signingkey = 98350C22

[color]
	branch = auto
	diff = auto
	status = auto

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[alias]

  # make often typed commands more confortable
	st = status --short --branch
	
  # more stat when you pull a branch in
	pull = pull --stat

  # commit always with a signoff-by and verbose so you
  # can check the actual changes again
	cs = commit --signoff --verbose

	# clean untracked files, untracked directories and everything else
	# This produce a clean state, similar after fresh pull.
	cleanall = clean --force -d -x

	# list all new commits after you fetched, with stats, but excluding merges
	lc = log ORIG_HEAD.. --stat --no-merges

	# timezone aware version
	llog = log --date=local

	# fires up a git daemon for the repo you are currently in
	serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git

	gb = branch -av

	lg = log --color --graph --all --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit

	log-graph = log --all --graph --decorate

	w = !git branch -a && git log --branches --oneline --graph --decorate --simplify-by-decoration --since='2 months ago'

	diffstat      = diff --stat -r

	last          = log -1 HEAD

	graphviz = "!f() { echo 'digraph git {' ; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f][0-9a-f]*/\"&\"/g' ; echo '}'; }; f"

	changes       = "!sh -c 'git status | sed -n \"/Untracked/N;//N;1,//d;s/^#/?/p\"; git diff --name-status -r \"$@\"' -"

	who           = shortlog -s --

	lol = log --graph --decorate --pretty=oneline --abbrev-commit
	lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
	lolap = log --graph --decorate --pretty=oneline --abbrev-commit --all --patch

  # for tex, markdown files
	wdiff = diff --color-words

  # specialized grep command for C/C++ and programming
  # cases at all use
	g = grep --break --heading --line-number --show-function --before-context 10

	merge = merge --progress --verbose

[core]
	legacyheaders = false
	excludesfile = $HOME/.gitignore
	whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol

[repack]
	usedeltabaseoffset = true

[push]
	#default = matching
	default = upstream

[merge]
	tool = vimdiff
	log = true
	summary = true

[diff]
	# Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
	# instead of a/b/c/d as prefixes for patches
	mnemonicprefix = true

[rerere]
	# Remember my merges
	enabled = true

[apply]
	whitespace = fix

[commit]
	signoff = yes

[sendemail]
	bcc = hagen@jauu.net
	smtpencryption = tls
	smtpserver = smtp.mailbox.org
	smtpuser = hagen@jauu.net
	smtpserverport = 465
	confirm = auto


[giggle]
	main-window-maximized = false
	main-window-geometry = 1680x1050+0+0
	history-view-vpane-position = 331
	main-window-view = HistoryView
	file-view-vpane-position = 241
