# Load plugins.
#set -g @plugin 'tmux-plugins/tmux-yank'        # Cross-platform support for clipboard.
#set -g @plugin 'tmux-plugins/tmux-resurrect'   # Save/Restore sessions
#set -g @plugin 'tmux-plugins/tmux-continuum'   # Auto Save/Restore

# We don't actually need to set the one-dark theme, I've customised the vanilla
# tmux configuration to my liking. If this seems to be working well then I will
# later remove this line.
# set -g @plugin 'odedlaz/tmux-onedark-theme'    # OneDark Theme

# Remap prefix to ctrl-a for screen consistency.
set -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

# Restore using continuum.
#set -g @continuum-restore 'on'

# Configuration management.

# Shell management.

# Set the default shell, and set the default command to use our shell (this
# means we source things properly, show the correct PS1 etc).
set -g default-shell ${SHELL} 
set -g default-command ${SHELL}

# Mouse management.

# Enable mouse mode (tmux 2.1 and above)
set -g mouse off

# Colour management (yikes) and alert management.

# Use 256 colours.
set-option -ga terminal-overrides ",xterm-256color:Tc"
set-option -g default-terminal "screen-256color"

# Enable visual alerts for windows. Hide bells/silence.
set-window-option -g monitor-activity off # highlight active windows?
set-option -g visual-activity off        # show a message on window activity?
set-option -g visual-silence off
set-option -g visual-bell off
set-option -g bell-action none

# Nested session configuration.

# Use ^b b to send the leader to a nested session. This means if you are
# using tmux and then ssh into a tmux session (i.e. a nested session) you
# can run commands in the nested session with ^B b <command>.
bind-key b send-prefix

# Keyboard Management.

# Don't wait for an escape sequence after hitting
# Esc. fixes insert mode exit lag in vim.
set -sg escape-time 0

# Clipboard / Copy / Paste
# Note: This is heavily OS dependent, which is why we have separate versions
# for OSX, Ubuntu etc. I'm trying out tmux-yank for this but it is still work in
# progress.


# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' begin/end selection as in Vim.
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Pane and Window Management.

# Open new panes and splits in the same working directory.
bind c new-window -c "#{pane_current_path}"

# Set the name of the window initially, but then don't let tmux change it.
# The name can still be set at any time with Ctrl+B + ,
set-option -g allow-rename off

# Start windows and panes at 1.
set -g base-index 1
set -g pane-base-index 1

# When we add/remove windows, renumber them in sequential order.
set -g renumber-windows on

# Split panes using | and -
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Ctrl+B h/l to swap windows left/right, i.e. moving the tabs around.
bind-key h swap-window -t -1\; select-window -t -1
bind-key l swap-window -t +1\; select-window -t +1


# Meta + h/l to cycle through tabs.
bind-key -n M-h previous-window
bind-key -n M-l next-window

# Ctr + Meta + h/j/k/l to resize panes.
bind-key -n C-M-h resize-pane -L 2
bind-key -n C-M-j resize-pane -D 2
bind-key -n C-M-k resize-pane -U 2
bind-key -n C-M-l resize-pane -R 2

# Enable focus events, which are needed to keep vim's focus events working when
# vim is running inside tmux.
set -g focus-events on

## Status bar design
# set -g status-utf8 on
set -g status-justify centre
set -g status-bg default
set -g status-interval 10


bind C-l send-keys 'C-l'
bind -n C-M-l send-keys clear

# Customise the visuals on top of One Dark for tmux. Might be good to put into
# its own file at some stage.
onedark_black="#282C34"
dark_black="#1c1c1c"
white="#ffffff"

set -g pane-border-style "fg=color238 bg=#282C34" # i.e. "$onedark_black"
set -g pane-active-border-style "fg=color14 bg=#282C34" # i.e. "$onedark_black"

# Info on left (I don't have a session display for now)
set -g status-left ''

set -g status-position bottom
set -g status-style "bg=default"
set -g status-left '#[fg=color14,bold]#S '
set -g status-left "#[fg=green]ðŸ’€ #S #[default]"
set -g status-right '  #[fg=color250] %Y-%m-%d #[fg=yellow,bold]%H:%M'

# Set the inactive window color and style
set -g window-status-style fg=colour244,bg=default
set -g window-status-format ' #I #W '

# Set the active window color and style
set -g window-status-current-style fg=red,bold,bg=default
set -g window-status-current-format ' #I #W '

set -g status-right-length 50
set -g status-left-length 20

# Set the style for windows.
# TODO: note that the 'red' in the status is not being shown, this is because we 
# need a multi-conditional at the moment these are sequential so the most recent
# overwrite the others.
# setw -g window-status-format '#I#[fg=colour245]:#[fg=color250]#{?window_activity_flag, #[fg=green],}#{?window_bell_flag,#[fg=red]#[blink],}#W#[fg=colour50]#F '
# This is the same status as above, with no highlight for activity.
#setw -g window-status-format '#I#[fg=colour245,bg=black]:#W#[fg=colour50,bg=black]#F '

# Set the style for the _current_ window.
#setw -g window-status-current-format '#[fg=color250,bg=black]#I#[fg=color245]:#[fg=color255,bold]#W#[fg=colour50]#F '

# cycle through window via CTRL A
set-option -g prefix C-a
bind-key C-a last-window

# Set a larger scroll back
set-option -g history-limit 100000

bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
bind C-v run "tmux set-buffer "$(xclip -o -sel clipboard)"; tmux paste-buffer"
